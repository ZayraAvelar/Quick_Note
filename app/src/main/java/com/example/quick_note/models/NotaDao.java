package com.example.quick_note.models;import android.content.Context;import android.os.Build;import android.util.Log;import androidx.annotation.RequiresApi;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.StringRequest;import com.android.volley.toolbox.Volley;import com.example.quick_note.GlobalVariables;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import java.time.LocalDate;import java.time.format.DateTimeFormatter;import java.util.ArrayList;import java.util.List;public class NotaDao {    private List<Nota> notas;    private Context context;    private RequestQueue mRequestQueue;    public NotaDao(Context context) {        this.context = context;        notas = new ArrayList<>();        mRequestQueue = Volley.newRequestQueue(this.context);    }    /**     * recupera todas las notas de la base de datos     *     * @param onCallBack     * @return     */    public NotaDao obtenerNotas(final CallBack onCallBack){        //URL del endpoint        String url = GlobalVariables.URL+"notas";        StringRequest stringRequest = new StringRequest(Request.Method.GET, url, new Response.Listener<String>() {            public void onResponse(String response) {                Nota nota = new Nota();                try{                    JSONArray jsonArray = new JSONArray(response);                    Log.d("JSON Response", response);                    // Recorremos el array JSON y almacenamos los datos en una lista                    for (int i = 0; i < jsonArray.length(); i++) {                        JSONArray itemArray = jsonArray.getJSONArray(i);                        int idNota = itemArray.getInt(0);                        String nombreNota = itemArray.getString(1);                        String Descripcion = itemArray.getString(2);                        String fecha = itemArray.getString(3);                        int catid = itemArray.getInt(4);                        notas.add(new Nota(idNota, nombreNota, fecha, Descripcion, catid));                        System.out.println("Id: " + idNota + ", Nombre: " + nombreNota + ", Fecha: " + fecha + ", Descripción: " + Descripcion + ", Categoría: " + catid);                    }//fin del for                    onCallBack.onSuccess(notas);                } catch (JSONException e) {                    e.printStackTrace();                    onCallBack.onFail(e.toString());                }            }        }, new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {                Log.e("TAG", "Error en la solicitud: " + error.toString());            }        });        mRequestQueue.add(stringRequest);        return null;    }    //permite subir una nota a la base de datos    public NotaDao subirNota(final Nota miNota) {        String url = GlobalVariables.URL+"guardar-nota/" + miNota.getNombreNota() + "/" + miNota.getCatNota() + "/" + miNota.getDescNota() + "/" + miNota.getFechaNota() ;        StringRequest stringRequest = new StringRequest(Request.Method.POST, url, null,                new Response.ErrorListener() {                    @Override                    public void onErrorResponse(VolleyError error) {                        // Manejar el error de la solicitud                    }                });        // Agregar la solicitud a la cola de Volley        Volley.newRequestQueue(context).add(stringRequest);        return null;    }    //permite editar una nota    public NotaDao editarNota(final Nota miNota) {        String url = GlobalVariables.URL+"modificar-nota/" +  miNota.getIdNota() + "/" + miNota.getNombreNota() + "/" + miNota.getCatNota() + "/" + miNota.getDescNota() + "/" + miNota.getFechaNota() ;        StringRequest stringRequest = new StringRequest(Request.Method.POST, url, null,                new Response.ErrorListener() {                    @Override                    public void onErrorResponse(VolleyError error) {                        // Manejar el error de la solicitud                    }                });        // Agregar la solicitud a la cola de Volley        Volley.newRequestQueue(context).add(stringRequest);        return null;    }    //permite eliminar una nota    public NotaDao eliminarNota(final Nota nota){        String url = GlobalVariables.URL+"api/eliminar-nota/" +  nota.getIdNota();        StringRequest stringRequest = new StringRequest(Request.Method.DELETE, url, null,                new Response.ErrorListener() {                    @Override                    public void onErrorResponse(VolleyError error) {                    }                });        Volley.newRequestQueue(context).add(stringRequest);        return null;    }    public interface CallBack {        void onSuccess(List<Nota> notas);        void onFail(String msg);    }}